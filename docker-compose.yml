services:
  fund-store:
    build:
      context: ./apps/funding-service-design-fund-store
    command: bash -c "flask db upgrade && python -m scripts.load_all_fund_rounds && python -m debugpy --listen 0.0.0.0:5678 -m wsgi"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/fund_store
    ports:
      - 3001:8080
      - 5681:5678
    depends_on:
      database:
        condition: service_healthy
    volumes: [ './apps/funding-service-design-fund-store:/app' ]
    profiles: [ pre ]

  application-store:
    build:
      context: ./apps/funding-service-design-application-store
    command: bash -c "flask db upgrade && python -m debugpy --listen 0.0.0.0:5678 -m wsgi"
    environment:
      - FLASK_ENV=development
      - FUND_STORE_API_HOST=http://fund-store:8080
      - DATABASE_URL=postgresql://postgres:password@database:5432/application_store
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - NOTIFICATION_SERVICE_HOST=http://notification:8080
    env_file: .awslocal.env
    ports:
      - 3002:8080
      - 5682:5678
    depends_on:
      database:
        condition: service_healthy
      localstack:
        condition: service_started
    volumes: [ './apps/funding-service-design-application-store:/app' ]
    profiles: [ pre ]

  account-store:
    build:
      context: ./apps/funding-service-design-account-store
    command: [ "sh", "-c", "flask db upgrade && python -m debugpy --listen 0.0.0.0:5678 -m wsgi" ]
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/account_store
    volumes: [ './apps/funding-service-design-account-store:/app' ]
    ports:
      - 3003:8080
      - 5683:5678
    depends_on:
      database:
        condition: service_healthy

  assessment-store:
    build:
      context: ./apps/funding-service-design-assessment-store
    volumes: [ './apps/funding-service-design-assessment-store:/app' ]
    command: [ "sh", "-c", "flask db upgrade && python -m debugpy --listen 0.0.0.0:5678 -m wsgi" ]
    ports:
      - 3005:8080
      - 5685:5678
    environment:
      - DATABASE_URL=postgresql://postgres:password@database:5432/assessment_store
      - APPLICATION_STORE_API_HOST=http://application-store:8080
    env_file: .awslocal.env
    depends_on:
      database:
        condition: service_healthy
      localstack:
        condition: service_started
    profiles: [ pre ]

  assessment:
    build:
      context: ./apps/funding-service-design-assessment
    volumes: [ './apps/funding-service-design-assessment:/app' ]
    command: [ "sh", "-c", "python -m debugpy --listen 0.0.0.0:5678 -m flask run --no-debugger --host 0.0.0.0 --port 8080" ]
    depends_on:
      - redis-data
      - localstack
    environment:
      - FLASK_ENV=development
      - FUND_STORE_API_HOST=http://fund-store:8080
      - APPLICATION_STORE_API_HOST=http://application-store:8080
      - ASSESSMENT_STORE_API_HOST=http://assessment-store:8080
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - AUTHENTICATOR_HOST=http://localhost:3004
      - REDIS_INSTANCE_URI=redis://redis-data:6379
    env_file: .awslocal.env
    ports:
      - 3010:8080
      - 5689:5678
    profiles: [ pre ]

  frontend:
    build:
      context: ./apps/funding-service-design-frontend
      dockerfile: Dockerfile
      args:
        - USE_DEV_REQUIREMENTS=true
    volumes: [ './apps/funding-service-design-frontend:/app' ]
    command: [ "sh", "-c", "python -m debugpy --listen 0.0.0.0:5678 -m flask run --no-debugger --host 0.0.0.0 --port 8080" ]
    depends_on:
      - redis-data
      - localstack
    environment:
      - USE_LOCAL_DATA=False
      - APPLICATION_STORE_API_HOST=http://application-store:8080
      - FUND_STORE_API_HOST=http://fund-store:8080
      - FORMS_SERVICE_PUBLIC_HOST=http://localhost:3009
      - FORMS_SERVICE_PRIVATE_HOST=http://form-runner:3009
      - AUTHENTICATOR_HOST=http://localhost:3004
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - REDIS_INSTANCE_URI=redis://redis-data:6379
      - SECRET_KEY=dc_key
    env_file: .awslocal.env
    ports:
      - 3008:8080
      - 5688:5678
    profiles: [ pre ]

  form-runner:
    depends_on:
      - localstack
    build:
      context: ./apps/digital-form-builder-adapter
      dockerfile: ./runner/Dockerfile
    command: yarn runner production
    ports:
      - 3009:3009
      - 9228:9228
    environment:
      - LOG_LEVEL=debug
      - JWT_AUTH_ENABLED=true
      - JWT_AUTH_COOKIE_NAME=fsd_user_token
      - JWT_REDIRECT_TO_AUTHENTICATION_URL=http://localhost:3004/sessions/sign-out
      - RSA256_PUBLIC_KEY_BASE64="LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZU1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTUFEQ0JpQUtCZ0hHYnRGMXlWR1crckNBRk9JZGFrVVZ3Q2Z1dgp4SEUzOGxFL2kwS1dwTXdkU0haRkZMWW5IakJWT09oMTVFaWl6WXphNEZUSlRNdkwyRTRRckxwcVlqNktFNnR2CkhyaHlQL041ZnlwU3p0OHZDajlzcFo4KzBrRnVjVzl6eU1rUHVEaXNZdG1rV0dkeEJta2QzZ3RZcDNtT0k1M1YKVkRnS2J0b0lGVTNzSWs1TkFnTUJBQUU9Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ=="
      - 'NODE_CONFIG={"safelist": ["application-store"]}'
      - CONTACT_US_URL=http://localhost:3008/contact_us
      - FEEDBACK_LINK=http://localhost:3008/feedback
      - COOKIE_POLICY_URL=http://localhost:3008/cookie_policy
      - ACCESSIBILITY_STATEMENT_URL=http://localhost:3008/accessibility_statement
      - SERVICE_START_PAGE=http://localhost:3008/account
      - MULTIFUND_URL=http://localhost:3008/account
      - LOGOUT_URL=http://localhost:3004/sessions/sign-out
      - PRIVACY_POLICY_URL=http://localhost:3008/privacy
      - ELIGIBILITY_RESULT_URL=http://localhost:3008/eligibility-result
    env_file: .awslocal.env
    profiles: [ pre ]

  authenticator:
    build:
      context: ./apps/funding-service-design-authenticator
    volumes: [ './apps/funding-service-design-authenticator:/app' ]
    command: bash -c "python -m debugpy --listen 0.0.0.0:5678 -m flask run -p 8080 -h 0.0.0.0"
    ports:
      - 3004:8080
      - 5684:5678
    depends_on:
      - redis-data
    env_file:
      - .env # For the AZURE_AD_* variables
      - .awslocal.env
    environment:
      - REDIS_INSTANCE_URI=redis://redis-data:6379
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - APPLICATION_STORE_API_HOST=http://application-store:8080
      - FUND_STORE_API_HOST=http://fund-store:8080
      - AUTHENTICATOR_HOST=http://localhost:3004
      - NOTIFICATION_SERVICE_HOST=http://notification:8080
      - APPLICANT_FRONTEND_HOST=http://localhost:3008
      - ASSESSMENT_FRONTEND_HOST=http://localhost:3010

  notification:
    build:
      context: ./apps/funding-service-design-notification
    volumes: [ './apps/funding-service-design-notification:/app' ]
    command: [ "sh", "-c", "python -m debugpy --listen 0.0.0.0:5678 -m wsgi" ]
    ports:
      - 3006:8080
      - 5686:5678
    env_file: .awslocal.env
    environment:
      - GOV_NOTIFY_API_KEY=${GOV_NOTIFY_API_KEY:?err}
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - AWS_MSG_BUCKET_NAME=fsd-notification-bucket
    profiles: [ pre ]

  data-store:
    # http://github.com/communitiesuk/funding-service-design-post-award-data-store
    build:
      context: ./apps/funding-service-design-post-award-data-store
      args:
        REQUIREMENTS: requirements-dev.txt
    command: >
      bash -c " flask db upgrade && \ flask db-data seed-ref && \ flask db-data seed-sample-data && \ ${VSC_DEBUG:-flask run -p 4001 -h 0.0.0.0} "
    volumes:
      - './apps/funding-service-design-post-award-data-store:/app'
    stdin_open: true
    tty: true
    ports:
      - 4001:4001
      - 5687:5678
    env_file:
      - .env
      - .awslocal.env
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/data_store
      - FIND_SERVICE_BASE_URL=http://find-monitoring-data.levellingup.gov.localhost:4001
      - REDIS_URL=redis://redis-data:6379/1
      - AUTHENTICATOR_HOST=http://authenticator.levellingup.gov.localhost:3004
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    profiles: [ post ]

  data-store-celery:
    build:
      context: ./apps/funding-service-design-post-award-data-store
      args:
        REQUIREMENTS: requirements-dev.txt
    command: >
      bash -c " if [ \"$CELERY_AUTO_REFRESH\" = \"true\" ]; then
          watchfiles 'celery -A app.celery_app worker --loglevel INFO' --filter python;
      else
          celery -A app.celery_app worker --loglevel INFO;
      fi "
    volumes: [ './apps/funding-service-design-post-award-data-store:/app' ]
    depends_on:
      redis-data:
        condition: service_started
      database:
        condition: service_healthy
    env_file:
      - .env
      - .awslocal.env
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/data_store
      - FIND_SERVICE_BASE_URL=http://find-monitoring-data.levellingup.gov.localhost:4001
      - REDIS_URL=redis://redis-data:6379/1
    stdin_open: true
    tty: true
    restart: unless-stopped
    profiles: [ post ]

  redis-data:
    image: redis
    ports:
      - 6379:6379

  database:
    image: postgres
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=assessment_store,account_store,application_store,fund_store,data_store,data_store_test
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:3.7.2
    env_file: .awslocal.env
    environment:
      - SERVICES=s3,sqs
      - PERSISTENCE=1
    ports:
      - 4566:4566 # LocalStack endpoint
      - 4510-4559:4510-4559 # external services port range
    volumes:
      - ./docker-localstack:/etc/localstack/init/ready.d
      - localstack:/var/lib/localstack

volumes:
  localstack: null
