name: funding-service

services:
  fab:
    build:
      context: ./apps/funding-service-design-fund-application-builder
      dockerfile: Dockerfile
      args:
        - USE_DEV_REQUIREMENTS=true
    command: [ "sh", "-c", "python -m flask db upgrade && python -m build && python -m debugpy --listen 0.0.0.0:5678 -m flask run --no-debugger --host 0.0.0.0 --port 8080 --cert=/app-certs/cert.pem --key=/app-certs/key.pem" ]
    environment:
      - FORM_RUNNER_INTERNAL_HOST=http://form-runner.levellingup.gov.localhost:3009
      - FORM_RUNNER_EXTERNAL_HOST=http://form-runner.levellingup.gov.localhost:3009
      - DATABASE_URL=postgresql://postgres:password@database:5432/fab_store # pragma: allowlist secret
      - FLASK_DEBUG=0
      - FLASK_ENV=development
      - SECRET_KEY=local
      - AUTHENTICATOR_HOST=https://authenticator.levellingup.gov.localhost:4004
      - RSA256_PUBLIC_KEY_BASE64="LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZU1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTUFEQ0JpQUtCZ0hHYnRGMXlWR1crckNBRk9JZGFrVVZ3Q2Z1dgp4SEUzOGxFL2kwS1dwTXdkU0haRkZMWW5IakJWT09oMTVFaWl6WXphNEZUSlRNdkwyRTRRckxwcVlqNktFNnR2CkhyaHlQL041ZnlwU3p0OHZDajlzcFo4KzBrRnVjVzl6eU1rUHVEaXNZdG1rV0dkeEJta2QzZ3RZcDNtT0k1M1YKVkRnS2J0b0lGVTNzSWs1TkFnTUJBQUU9Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ=="
    ports:
      - 3011:8080
      - 5690:5678
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - './apps/funding-service-design-fund-application-builder:/app'
      - './certs:/app-certs'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    profiles: [ pre ]
    networks:
      default:
        aliases:
          - fund-application-builder.levellingup.gov.localhost

  account-store:
    build:
      context: ./apps/funding-service-design-account-store
    command:
      bash -c "
      flask db upgrade && \
      python -m invoke seed-local-account-store && \
      python -m debugpy --listen 0.0.0.0:5678 -m wsgi
      "
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/account_store
    volumes:
      - './apps/funding-service-design-account-store:/app'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    ports:
      - 3003:8080
      - 5683:5678
    depends_on:
      database:
        condition: service_healthy

  pre-award-stores:
    build:
      context: ./apps/funding-service-pre-award-stores
    command: >
      bash -c "
      flask db upgrade && \
      python -m fund_store.scripts.load_all_fund_rounds && \
      python -m fund_store.scripts.fund_round_loaders.load_fund_round_from_fab --fund_short_code CTDF && \
      python -m invoke -r assessment_store seed-local-assessment-store-db && \
      python -m debugpy --listen 0.0.0.0:5678 -m wsgi
      "
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/pre_award_stores
      - FUND_STORE_API_HOST=http://pre-award-stores:8080/fund
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - APPLICATION_STORE_API_HOST=http://pre-award-stores:8080/application
    env_file: .awslocal.env
    ports:
      - 3012:8080
      - 5692:5678
    depends_on:
      database:
        condition: service_healthy
      localstack:
        condition: service_started
    volumes:
      - './apps/funding-service-pre-award-stores:/app'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    profiles: [ pre ]

  pre-award-frontend:
    build:
      context: ./apps/funding-service-pre-award-frontend
      dockerfile: Dockerfile
      args:
        - USE_DEV_REQUIREMENTS=true
    volumes:
      - './apps/funding-service-pre-award-frontend:/app'
      - './certs:/app-certs'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    command: [ "sh", "-c", "python -m debugpy --listen 0.0.0.0:5678 -m flask run --no-debugger --host 0.0.0.0 --port 8080 --cert=/app-certs/cert.pem --key=/app-certs/key.pem" ]
    stdin_open: true
    tty: true
    depends_on:
      - redis-data
      - localstack
    environment:
      - USE_LOCAL_DATA=False
      - APPLICATION_STORE_API_HOST=http://pre-award-stores:8080/application
      - FUND_STORE_API_HOST=http://pre-award-stores:8080/fund
      - FORMS_SERVICE_PUBLIC_HOST=http://form-runner.levellingup.gov.localhost:3009
      - FORMS_SERVICE_PRIVATE_HOST=http://form-runner.levellingup.gov.localhost:3009
      - AUTHENTICATOR_HOST=https://authenticator.levellingup.gov.localhost:4004
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - APPLY_HOST=frontend.levellingup.gov.localhost:3008
      - ASSESS_HOST=assessment.levellingup.gov.localhost:3010
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - REDIS_INSTANCE_URI=redis://redis-data:6379
      - SECRET_KEY=dc_key
      - ASSESSMENT_STORE_API_HOST=http://pre-award-stores:8080/assessment
    env_file: .awslocal.env
    ports:
      - 3008:8080
      - 3010:8080
      - 5688:5678
    networks:
      default:
        aliases:
          - frontend.levellingup.gov.localhost
          - assessment.levellingup.gov.localhost
    profiles: [ pre ]

  form-runner:
    depends_on:
      - redis-data
      - localstack
    build:
      context: ./apps/digital-form-builder-adapter
      dockerfile: ./runner/Dockerfile
    command: yarn runner production
    ports:
      - 3009:3009
      - 9228:9228
    environment:
      - LOG_LEVEL=debug
      - JWT_AUTH_ENABLED=true
      - JWT_AUTH_COOKIE_NAME=fsd_user_token
      - JWT_REDIRECT_TO_AUTHENTICATION_URL=https://authenticator.levellingup.gov.localhost:4004/sessions/sign-out
      - RSA256_PUBLIC_KEY_BASE64="LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZU1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTUFEQ0JpQUtCZ0hHYnRGMXlWR1crckNBRk9JZGFrVVZ3Q2Z1dgp4SEUzOGxFL2kwS1dwTXdkU0haRkZMWW5IakJWT09oMTVFaWl6WXphNEZUSlRNdkwyRTRRckxwcVlqNktFNnR2CkhyaHlQL041ZnlwU3p0OHZDajlzcFo4KzBrRnVjVzl6eU1rUHVEaXNZdG1rV0dkeEJta2QzZ3RZcDNtT0k1M1YKVkRnS2J0b0lGVTNzSWs1TkFnTUJBQUU9Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ=="
      - 'NODE_CONFIG={"safelist": ["pre-award-stores"]}'
      - CONTACT_US_URL=https://frontend.levellingup.gov.localhost:3008/contact_us
      - FEEDBACK_LINK=https://frontend.levellingup.gov.localhost:3008/feedback
      - COOKIE_POLICY_URL=https://frontend.levellingup.gov.localhost:3008/cookie_policy
      - ACCESSIBILITY_STATEMENT_URL=https://frontend.levellingup.gov.localhost:3008/accessibility_statement
      - SERVICE_START_PAGE=https://frontend.levellingup.gov.localhost:3008/account
      - MULTIFUND_URL=https://frontend.levellingup.gov.localhost:3008/account
      - LOGOUT_URL=https://authenticator.levellingup.gov.localhost:4004/sessions/sign-out
      - PRIVACY_POLICY_URL=https://frontend.levellingup.gov.localhost:3008/privacy
      - ELIGIBILITY_RESULT_URL=https://frontend.levellingup.gov.localhost:3008/eligibility-result
      - SINGLE_REDIS=true
      - FORM_RUNNER_ADAPTER_REDIS_INSTANCE_URI=redis://redis-data:6379
    env_file: .awslocal.env
    networks:
      default:
        aliases:
          - form-runner.levellingup.gov.localhost
    profiles: [ pre ]

  authenticator:
    build:
      context: ./apps/funding-service-design-authenticator
    volumes:
      - './apps/funding-service-design-authenticator:/app'
      - './certs:/app-certs'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    command: bash -c "python -m debugpy --listen 0.0.0.0:5678 -m flask run -p 8080 -h 0.0.0.0 --cert=/app-certs/cert.pem --key=/app-certs/key.pem"
    ports:
      - 4004:8080
      - 5684:5678
    depends_on:
      - localstack
      - redis-data
    env_file:
      - .env # For the AZURE_AD_* variables
      - .awslocal.env
    environment:
      - REDIS_INSTANCE_URI=redis://redis-data:6379
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - FUND_STORE_API_HOST=http://pre-award-stores:8080/fund
      - AUTHENTICATOR_HOST=https://authenticator.levellingup.gov.localhost:4004
      - APPLICANT_FRONTEND_HOST=https://frontend.levellingup.gov.localhost:3008
      - ASSESSMENT_FRONTEND_HOST=https://assessment.levellingup.gov.localhost:3010
      - POST_AWARD_FRONTEND_HOST=https://find-monitoring-data.levellingup.gov.localhost:4001
      - POST_AWARD_SUBMIT_HOST=https://submit-monitoring-data.levellingup.gov.localhost:4001
      - FUND_APPLICATION_BUILDER_HOST=https://fund-application-builder.levellingup.gov.localhost:3011
      - COOKIE_DOMAIN=.levellingup.gov.localhost
    networks:
      default:
        aliases:
          - authenticator.levellingup.gov.localhost

  notification:
    build:
      context: ./apps/funding-service-design-notification
    volumes:
      - './apps/funding-service-design-notification:/app'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    command: [ "sh", "-c", "python -m debugpy --listen 0.0.0.0:5678 -m wsgi" ]
    ports:
      - 3006:8080
      - 5686:5678
    depends_on:
      - localstack
    env_file: .awslocal.env
    environment:
      - GOV_NOTIFY_API_KEY=${GOV_NOTIFY_API_KEY:?err}
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - AWS_MSG_BUCKET_NAME=fsd-notification-bucket
    profiles: [ pre ]

  data-store:
    # http://github.com/communitiesuk/funding-service-design-post-award-data-store
    build:
      context: ./apps/funding-service-design-post-award-data-store
    command: >
      bash -c "
        flask db upgrade &&
        flask db-data seed-ref &&
        flask db-data seed-sample-data &&
        python -m debugpy --listen 0.0.0.0:5678 -m flask run -p 4001 -h 0.0.0.0 --cert=/app-certs/cert.pem --key=/app-certs/key.pem
      "
    volumes:
      - './apps/funding-service-design-post-award-data-store:/app'
      - './certs:/app-certs'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    stdin_open: true
    tty: true
    ports:
      - 4001:4001
      - 5687:5678
    env_file:
      - .env
      - .awslocal.env
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/data_store
      - FIND_SERVICE_BASE_URL=https://find-monitoring-data.levellingup.gov.localhost:4001
      - REDIS_URL=redis://redis-data:6379/1
      - AUTHENTICATOR_HOST=https://authenticator.levellingup.gov.localhost:4004
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    networks:
      default:
        aliases:
          - find-monitoring-data.levellingup.gov.localhost
          - submit-monitoring-data.levellingup.gov.localhost
    profiles: [ post ]

  data-store-celery:
    build:
      context: ./apps/funding-service-design-post-award-data-store
      args:
        REQUIREMENTS: requirements-dev.txt
    command: >
      bash -c " if [ \"$CELERY_AUTO_REFRESH\" = \"true\" ]; then
          watchfiles 'celery -A app.celery_app worker --loglevel INFO' --filter python;
      else
          celery -A app.celery_app worker --loglevel INFO;
      fi "
    volumes:
      - './apps/funding-service-design-post-award-data-store:/app'
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    depends_on:
      redis-data:
        condition: service_started
      database:
        condition: service_healthy
    env_file:
      - .env
      - .awslocal.env
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/data_store
      - FIND_SERVICE_BASE_URL=https://find-monitoring-data.levellingup.gov.localhost:4001
      - REDIS_URL=redis://redis-data:6379/1
    stdin_open: true
    tty: true
    restart: unless-stopped
    profiles: [ post ]

  redis-data:
    image: redis
    ports:
      - 6379:6379

  database:
    image: postgres
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=assessment_store,account_store,data_store,data_store_test,fab_store,fab_store_test,pre_award_stores,pre_award_stores_test
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:3.7.2
    env_file: .awslocal.env
    environment:
      - SERVICES=s3,sqs
      - PERSISTENCE=1
      - LS_LOG=warn
    ports:
      - 4566:4566 # LocalStack endpoint
      - 4510-4559:4510-4559 # external services port range
    volumes:
      - ./docker-localstack:/etc/localstack/init/ready.d
      - localstack:/var/lib/localstack

volumes:
  localstack: null

networks:
  default:
